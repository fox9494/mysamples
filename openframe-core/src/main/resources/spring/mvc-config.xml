<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">


    <!--自动扫描的包名-->
    <context:component-scan base-package="com.openframe.**.web"/>

    <!-- 默认的注解映射的支持 -->  
    <mvc:annotation-driven />
    
    <!-- 文件上传配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="3145728"/>  <!-- 最大允许上传3M文件 -->
	</bean>

    <!--所有的静态资源在resource文件夹下的都被直接映射，可以嵌入到jsp页面，不被springmvc
        (see header.jsp for more details) -->
    <mvc:resources mapping="/resource/**" location="/resource/"/>
    
    <!--拦截器配置  -->
    <!-- <mvc:interceptors>
		<mvc:interceptor >
			<mvc:mapping path="/sys/manager/role/saveRoleAndType.htm"/> 
			<bean class="com.soarsky.boteng.common.web.interceptors.TokenInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> -->

    <!-- uses WebJars so Javascript and CSS libs can be declared as Maven dependencies (Bootstrap, jQuery...) -->
   <!--  <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/> -->
   
    <!--
        - Message source for this context, loaded from localized "messages_xx" files.
        - Files are stored inside src/main/resources
    -->
    <!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
          p:basename="messages/messages"/> -->

	<!--异常映射  -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- view name resolved using bean of type InternalResourceViewResolver -->
        <property name="defaultErrorView" value="exception"/><!--缺省的异常返回到 'WEB-INF/jsp/exception.jsp' -->
        <property name="warnLogCategory" value="warn"/>
        <!-- needed otherwise exceptions won't be logged anywhere -->
        <property name="exceptionMappings">
        	<props>
        		<prop key="java.lang.RuntimeException">exception</prop><!--返回到exception.jsp报错页面  -->
				<prop key="java.lang.Exception">exception</prop>
        	</props>
        </property>
    </bean>
    
       <!--
    - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
    - and uses the requested media type (determined by the path extension) to pick a matching view. 
    - When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView, 
    - otherwise to the BeanNameViewResolver.
    -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="cnManager"/>
        
        <property name="viewResolvers">
        	<list>
        		 <!-- Default viewClass: JSTL view (JSP with html output) -->
			    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			        <!-- Example: a logical view name of 'vets' is mapped to '/WEB-INF/jsp/vets.jsp' -->
			        <property name="prefix" value="/WEB-INF/jsp/"/>
			        <property name="suffix" value=".jsp"/>
			    </bean>
			
			    <!-- Used here for 'xml' and 'atom' views  -->
			    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
        	</list>
        </property>
    </bean>

    <!-- Simple strategy: only path extension is taken into account -->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="text/html"/>
        
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html" />
                <entry key="xml" value="application/xml" />
                <entry key="atom" value="application/atom+xml" />
            </map>
        </property>
    </bean>

</beans>
